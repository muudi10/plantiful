[{"/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/index.js":"1","/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/App.js":"2","/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/components/List/List.js":"3","/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/components/LoginForm.js":"4","/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/components/RegisterForm.js":"5","/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/components/Dashboard.js":"6","/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/components/PlantPage.js":"7","/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/components/Navbar.js":"8","/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/components/Footer.js":"9","/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/dataContext/DataContext.js":"10","/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/components/Home.js":"11","/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/components/Alert.js":"12","/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/dataContext/plantbyname.js":"13","/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/dataContext/register.js":"14","/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/components/Pagination/Pagination.js":"15","/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/dataContext/ApiServices.js":"16","/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/dataContext/userRegistration.js":"17","/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/dataContext/UserContext.js":"18","/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/dataContext/PlantConetx.js":"19"},{"size":534,"mtime":1639853801604,"results":"20","hashOfConfig":"21"},{"size":3192,"mtime":1639864817123,"results":"22","hashOfConfig":"21"},{"size":4212,"mtime":1639853801604,"results":"23","hashOfConfig":"21"},{"size":2164,"mtime":1639770111678,"results":"24","hashOfConfig":"21"},{"size":3052,"mtime":1639770111682,"results":"25","hashOfConfig":"21"},{"size":142,"mtime":1639770111678,"results":"26","hashOfConfig":"21"},{"size":2632,"mtime":1639770111678,"results":"27","hashOfConfig":"21"},{"size":1003,"mtime":1639770111678,"results":"28","hashOfConfig":"21"},{"size":2152,"mtime":1639770111678,"results":"29","hashOfConfig":"21"},{"size":2429,"mtime":1639853801604,"results":"30","hashOfConfig":"21"},{"size":4663,"mtime":1639770111678,"results":"31","hashOfConfig":"21"},{"size":399,"mtime":1638479728070,"results":"32","hashOfConfig":"21"},{"size":285,"mtime":1639770111682,"results":"33","hashOfConfig":"21"},{"size":622,"mtime":1639770111682,"results":"34","hashOfConfig":"21"},{"size":880,"mtime":1638619147738,"results":"35","hashOfConfig":"21"},{"size":2257,"mtime":1639868868322,"results":"36","hashOfConfig":"21"},{"size":1057,"mtime":1639770111682,"results":"37","hashOfConfig":"21"},{"size":1939,"mtime":1639853801604,"results":"38","hashOfConfig":"21"},{"size":799,"mtime":1639843438219,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1wxjva5",{"filePath":"43","messages":"44","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"42"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"42"},{"filePath":"83","messages":"84","errorCount":1,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/index.js",[],["85","86"],"/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/App.js",["87","88","89","90"],"import RegisterForm from \"./components/RegisterForm\";\nimport LoginForm from \"./components/LoginForm\";\nimport PlantsList from \"./components/List/List\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport Navigationbar from \"./components/Navbar\";\nimport PlantPage from \"./components/PlantPage\";\nimport Dashboard from \"./components/Dashboard\";\nimport Home from \"./components/Home\";\nimport Footer from \"./components/Footer\";\nimport \"bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Container } from \"react-bootstrap\";\nimport { DataContextProvider } from \"./dataContext/DataContext\";\nimport { UserRegContextProvider } from \"./dataContext/userRegistration\";\nimport { UserContextProvider } from \"./dataContext/UserContext\";\nimport { UserContext } from \"./dataContext/UserContext\";\nimport { useContext, useEffect } from \"react\";\nimport jwt from \"jsonwebtoken\";\nimport { DataContext } from \"./dataContext/DataContext\";\nimport ApiCalls from \"./dataContext/ApiServices\";\nfunction App() {\n  const Secret = process.env.REACT_APP_JWT_SECRET\n  console.log(Secret)\n  const { userGloblaState,setPlantMatch, plants, setPlants, setUserGlobalState } = useContext(UserContext);\n  console.log(plants)\n  useEffect(() => {\n    setPlantMatch(plants)\n   const token = JSON.parse(window.localStorage.getItem(\"token\"));\n    \n      if (!token) {\n   setUserGlobalState({\n        ...userGloblaState\n      })\n    }else{\n    const decodedUser = jwt.verify(token, \"secret\");\n    setUserGlobalState({\n      ...decodedUser\n    })\n\n      \n    }\n  }, []);\n\n\n  \n  console.log(userGloblaState);\n\n  console.log(plants)\n  return (\n    <DataContextProvider>\n      <UserRegContextProvider>\n        <UserContextProvider>\n          <div className=\"App\">\n            <Container fluid=\"true\" className={\"no-gutters mx-0 px-0\"}>\n              <Router>\n                <Navigationbar fluid className={\"no-gutters mx-0 px-0\"} />{\" \"}\n                <Routes>\n                  <Route path=\"/\" element={<Home />}>\n                    {\" \"}\n                  </Route>{\" \"}\n                  <Route path=\"/registerform\" element={<RegisterForm />}>\n                    {\" \"}\n                  </Route>{\" \"}\n                  <Route path=\"/loginform\" element={<LoginForm />}>\n                    {\" \"}\n                  </Route>{\" \"}\n                  <Route path=\"/plants\" element={<PlantsList />}>\n                    {\" \"}\n                  </Route>{\" \"}\n                  <Route\n                    path=\"/plants/plantname/:latinname\"\n                    element={<PlantPage />}\n                  >\n                    {\" \"}\n                  </Route>{\" \"}\n                  <Route path=\"/dashboard\" element={<Dashboard />}>\n                    {\" \"}\n                  </Route>{\" \"}\n                </Routes>{\" \"}\n              </Router>{\" \"}\n              <div className=\"page_container\">\n                <div classname=\"content_wrap\">\n                  <Footer />\n                </div>{\" \"}\n              </div>\n            </Container>{\" \"}\n          </div>{\" \"}\n        </UserContextProvider>{\" \"}\n      </UserRegContextProvider>{\" \"}\n    </DataContextProvider>\n  );\n}\n\nexport default App;\n","/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/components/List/List.js",["91","92"],"import { Plus, Heart, ArrowRight } from \"phosphor-react\";\nimport React, { useEffect, useContext, useState } from \"react\";\nimport { Button, Container } from \"react-bootstrap\";\nimport \"./list.css\";\nimport { UserContext } from \"../../dataContext/UserContext\";\nimport { Link } from \"react-router-dom\";\nimport Pagination from \"../Pagination/Pagination\";\nimport ApiCalls from \"../../dataContext/ApiServices\";\n\nfunction List() {\n  const { plants, PlantMatch, setPlantMatch } =\n    useContext(UserContext);\n  const [search, setSearch] = useState(\"\");\n\n  const handleLoginInputChange = (event) => {\n    event.preventDefault();\n    setSearch(event.target.value);\n    plantSearch(search);\n  };\n\n  const plantSearch = (search) => {\n    let matchedPlant = plants.filter((plant) => {\n      const regex = new RegExp(`${search}`, \"gi\");\n      return plant.latinName.match(regex) || plant.familyName.match(regex);\n    });\n    setPlantMatch(matchedPlant)\n   \n  };\n\nconst rendering =  (PlantMatch.length > 0 )? PlantMatch:plants\n\n  return (\n    <>\n      <Container\n        fluid\n        style={{\n          backgroundColor: \"#F9F5F1\",\n        }}\n      >\n        <section className=\"panel\">\n          <header className=\"panel-heading\"> </header>{\" \"}\n          <div className=\"panel-body\">\n            <div className=\"row p-3\">\n              <div className=\"col-12\">\n                <div className=\"input-group \">\n                  <input\n                    type=\"text\"\n                    placeholder=\"Search for a plant..\"\n                    className=\"w-50 search_input\"\n                    value={search}\n                    onChange={handleLoginInputChange}\n                  />\n                  <Button\n                    type=\"submit\"\n                    id=\"submit\"\n                    style={{\n                      backgroundColor: \"#55A356\",\n                      border: \"#013606\",\n                      margin: \"8px\",\n                      overflow: \"hidden\",\n                    }}\n                  >\n                    Go! <ArrowRight size={20} />{\" \"}\n                  </Button>{\" \"}\n                </div>{\" \"}\n              </div>{\" \"}\n            </div>{\" \"}\n          </div>{\" \"}\n          <table className=\"table table-hover p-table\">\n            <thead className=\"p_titles\">\n              <tr>\n                <th> Plant Name </th> <th> Image </th> <th> Origin </th>{\" \"}\n                <th> Watering needs </th> <th> Temperature </th> <th> Like </th>{\" \"}\n                <th> Add </th>{\" \"}\n              </tr>{\" \"}\n            </thead>{\" \"}\n            <tbody>\n              {rendering &&\n                rendering.map((plant, index) => (\n                  <>\n                    <div className=\"user\"> </div>{\" \"}\n                    <tr>\n                      <td className=\"p-name\">\n                        <Link to={`plantname/${plant.latinName}`}>\n                          {\" \"}\n                          {plant.familyName}{\" \"}\n                        </Link>\n\n                        <br />\n                      </td>{\" \"}\n                      <td className=\"p-name\">\n                        <a href=\"plant\"> {plant.familyName} </a> <br />\n                      </td>{\" \"}\n                      <td className=\"p-name\">\n                        <small> {plant.origin} </small>{\" \"}\n                      </td>\n                      <td className=\"p-name\">\n                        <small> {plant.watering} </small>{\" \"}\n                      </td>{\" \"}\n                      <td>\n                        <span className=\"label label-danger\">\n                          {\" \"}\n                          {plant.temperature} & deg; <sup> c </sup>{\" \"}\n                        </span>{\" \"}\n                      </td>{\" \"}\n                      <td>\n                        <Heart size={30} weight=\"bold\" className=\"m-4\" />\n                      </td>{\" \"}\n                      <td>\n                        <Plus size={20} weight=\"bold\" />\n                      </td>{\" \"}\n                    </tr>\n                  </>\n                ))}{\" \"}\n            </tbody>{\" \"}\n          </table>{\" \"}\n        </section>{\" \"}\n      </Container>\n\n      <Pagination />\n    </>\n  );\n}\n\nexport default List;\n","/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/components/LoginForm.js",[],"/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/components/RegisterForm.js",[],"/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/components/Dashboard.js",[],"/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/components/PlantPage.js",["93","94","95"],"import React, { useState, useEffect, useContext } from \"react\";\nimport { Container, Button } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { ArrowRight } from \"phosphor-react\";\nimport { useParams } from \"react-router-dom\";\nimport dummyPlant from \"../assets/dummyPlant.png\";\nimport Slider from \"react-slick\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport \"../styles/PlantPage.css\";\nimport getPlantByName from '../dataContext/plantbyname'\nconst { DataContext } = require(\"../dataContext/DataContext\")\n\n\nconst PlantPage = () => {\n// const { plants, plantByName, setPlantByName } = useContext(DataContext)\nconst [plantByName, setPlantByName] = useState([]);\n\tconst settings = {\n\t\tdots: true,\n\t\tlazyLoad: true,\n\t\tinfinite: true,\n\t\tspeed: 500,\n\t\tslidesToShow: 1,\n\t\tslidesToScroll: 1,\n\t\tinitialSlide: 2,\n\t};\n\n\tconst { latinname } = useParams();\n\n\tuseEffect(() => {\n\t\taxios\n\t\t\t.get(`/plants/plantname/${latinname}`)\n\n\t\t\t.then((response) => {\n\t\t\t\tsetPlantByName(response.data[0]);\n\t\t\t})\n\t\t\t.catch((error) => console.log(error));\n\t}, [latinname]);\n\n\n\treturn (\n\t\t<>\n\t\t<div className='wrapper'>\n\n\t\t\t<Container >\n\t\t\t<div className=\"title_border\">\n\t\t\t\t<h2 className='plant_title'> {plantByName.familyName} </h2>\n\t\t\t\t</div>\n\t\t\t\t<Slider {...settings}>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<img src={dummyPlant} alt='' width='40%' />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<img src={dummyPlant} alt='' width='40%' />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<img src={dummyPlant} alt='' width='40%' />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<img src={dummyPlant} alt='' width='40%' />\n\t\t\t\t\t</div>\n\t\t\t\t</Slider>\n\n\t\t\t\t<div className='plant_info'>\n\t\t\t\t\t\t<p className='plant_information_latinname'>\n                    <span className=\"plant_info_title\">Latin name:</span> {plantByName.latinName}\n\t\t\t\t\t</p>\n\t\t\t\t\t<p className='plant_information_origin'>\n\t\t\t\t\t\t<span className=\"plant_info_title\">Origin:</span> {plantByName.origin}\n\n\t\t\t\t\t</p>\n\t\t\t\t\t<p className='plant_information_wateringneeds'>\n\t\t\t\t\t<span className=\"plant_info_title\">\tWatering Needs:</span> {plantByName.watering}\n\t\t\t\t\t</p>\n\t\t\t\t\t<p className='plant_information_temperature'>\n                    <span className=\"plant_info_title\">Temperature:</span> {plantByName.temperature}&deg;<sup>c</sup>\n\t\t\t\t\t</p>\n\t\t\t\t\n\t\t\t\t\t<Button\n\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\tid='submit'\n                        className=\"add_button\"\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tbackgroundColor: \"#55A356\",\n\t\t\t\t\t\t\tborder: \"#013606\",\n\t\t\t\t\t\t\tmargin: \"8px\",\n\t\t\t\t\t\t\tpadding: \"10px\"\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\nAdd to dashboard <ArrowRight size={20} />\n\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t</Container>\n\t\t</div>\n\t\t</>\n\t);\n};\n\nexport default PlantPage;\n","/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/components/Navbar.js",[],"/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/components/Footer.js",[],"/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/dataContext/DataContext.js",["96","97","98"],"import { useState, useEffect, createContext } from \"react\";\nimport registerUSer from '../dataContext/register'\nimport { useParams } from \"react-router-dom\";\nimport getPlantByName from './plantbyname'\nimport   ApiServices from './ApiServices';\nexport const DataContext = createContext();\n\nexport const DataContextProvider = (props) => {\n    // user registeration\n    const plantiful = \"plantiful\"\n    const [path, setPath] = useState()\n    const [message, setMessage] = useState(false);\n    const initialState = {\n      fields: {\n        name: \"\",\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\"\n      },\n      loginFields: {\n        email: \"\",\n        password: \"\",\n      },\n      alert: {\n        message: \"\",\n        isSuccess: false,\n      },\n\n    };\n      const [fields, setFields] = useState(initialState.fields);\n    const somevalue = `15`\n \n    // const [plants, setPlants] = useState()\n    const [plantByName, setPlantByName] = useState([]);\n    const [searchTerm, setSearchTerm] = useState()\n    \n    const handleFieldChange = (event) => {\n      event.preventDefault();\n      setFields((prev) => ({\n        ...prev,\n        [event.target.name]: event.target.value,\n      }));\n    };\n    \n \n    const handleSubmit =(e)=>{\n        e.preventDefault()\n         ApiServices.userRegister(fields, setMessage)\n        }\n\n      const handleEnter = (event) => {\n        if (event.key === \"Enter\") {\n          // return handlePlantSearch();\n        }\n      };\n      const handleInputChange = (event) => setSearchTerm(event.target.value);\n \n  // const handlePlantSearch = () => {\n  //   getForecast(searchText, setSelectedDate, setForecasts, setLocation);\n  //   setSearchText(\"\");\n  // };\n const { latinname } = useParams();\n\nuseEffect(()=>{\n\n  getPlantByName(setPlantByName, path)\n},[])\n\n\n      const value = {\n        fields,\n\n        setFields,\n\n        message,\n        setMessage,\n        handleFieldChange,\n        handleSubmit,\n        // plants,\n        // setPlants,\n        plantByName,\n        setPlantByName,\n        searchTerm,\n        setSearchTerm,\n        setPath,\n        handleEnter,\n        getPlantByName,\n        plantiful,\n        handleInputChange,\n        ApiServices,\n        // loginField, \n        // setLoginField,\nsomevalue,\n        alert\n        // handlePlantSearch\n      };\n   \n\n  return (\n    <DataContext.Provider value={value}>{props.children}</DataContext.Provider>\n  );\n};\n","/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/components/Home.js",[],"/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/components/Alert.js",[],"/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/dataContext/plantbyname.js",[],"/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/dataContext/register.js",[],"/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/components/Pagination/Pagination.js",[],"/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/dataContext/ApiServices.js",["99"],"import axios from \"axios\";\n\n\nconst ApiCalls = {\n\n    getAllPlants: async (setPlants) => {\n        const baseURL = `https://api.eastberry.io`\n\n        let endpoint = '/plants';\n        const response = await axios.get(baseURL+endpoint)\n        const data = await response.data\n        setPlants(data)\n\n\n    },\n    getPlantByName: async (setPlantByName, latinname) => {\n        let endpoint = `/plants/plantname/${latinname}`\n        const response = await axios.get(endpoint)\n        const data = await response.data[0]\n        setPlantByName(data)\n\n    },\n    searchPlant: async (searchTerm) => {\n\n        let endpoint = '/plant';\n        if (searchTerm) {\n            endpoint = searchTerm + {\n                searchTerm\n            }\n        }\n        const response = await axios.get(endpoint)\n        const data = await response.data\n\n    },\n    userRegister: async (fields, setMessage) => {\n        try {\n            const response = await axios.post(\"/auth/register\", {\n                name: fields.name,\n                email: fields.email,\n                password: fields.password,\n\n            })\n            response.data && window.location.replace(\"/loginForm\");\n\n\n\n            //    const data = await response\n            console.log(response.data)\n            await setMessage(`Form has been submited sucessfully`)\n        } catch (error) {\n\n\n            setMessage(`Failed to submit form`)\n        }\n\n\n    },\n    userLogin: async (loginField, setUser, setIsLoggedIn, userGloblaState,\n        setUserGlobalState) => {\n        try {\n\n            const response = await axios.post('/auth/login', {\n                email: loginField.email,\n                password: loginField.password\n            }, )\n            console.log(response.data.others._id)\n            response && localStorage.setItem(\"token\", JSON.stringify(response.data.token))\n            response && setIsLoggedIn(true)\n            await setUserGlobalState({\n                ...userGloblaState,\n               token: response.data.token,\n            })\n            response && setUser(response.data.userPlants)\n            response && window.location.replace(\"/dashboard\")\n        } catch (error) {\n            console.log(error)\n\n        }\n    }\n\n\n\n\n}\n\nexport default ApiCalls","/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/dataContext/userRegistration.js",[],"/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/dataContext/UserContext.js",["100","101"],"import { useState, useEffect, createContext } from \"react\";\nimport ApiServices from \"./ApiServices\";\nexport const UserContext = createContext();\n\nexport const UserContextProvider = (props) => {\n  const initialState = {\n    loginFields: {\n      email: \"\",\n      password: \"\",\n    },\n    alert: {\n      message: \"\",\n      isSuccess: false,\n    },\n  };\n  const [plants, setPlants] = useState()\n  const LocalToken = localStorage.getItem(\"token\");\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [user, setUser] = useState(\"\");\n  const [alert, setAlert] = useState(initialState.alert);\n  const [loginField, setLoginField] = useState(initialState.loginFields);\n  const [token, setToken] = useState(LocalToken);\n  const [userGloblaState, setUserGlobalState] = useState({\n    userDetails:null,\n    token:null,\n    userId: null,\n    userPlants:null\n  });\n\n\n    const handleLogin = (e) => {\n    e.preventDefault();\n\n    setLoading(true);\n    setAlert({ message: \"\", isSuccess: false });\n    ApiServices.userLogin(\n      loginField,\n      setUser,\n      setIsLoggedIn,\n      userGloblaState,\n      setUserGlobalState\n    );\n  };\n\n\n\n  const [PlantMatch, setPlantMatch] = useState([])\n  const handleLoginInputChange = (event) => {\n    event.preventDefault();\n\n    setLoginField((prev) => ({\n      ...prev,\n      // eslint-disable-next-line no-restricted-globals\n      [event.target.name]: event.target.value,\n    }));\n  };\n  useEffect(()=>{\n    ApiServices.getAllPlants(setPlants)\n},[])\n  const values = {\n    token,\n    isLoggedIn,\n    user,\n    loginField,\n    handleLogin,\n    handleLoginInputChange,\n    alert,\n    setIsLoggedIn,\n    setUser,\n    userGloblaState,\n    setUserGlobalState,\n    plants,\n    setPlants,\n    PlantMatch,\n    setPlantMatch\n  };\n\n  return (\n    <UserContext.Provider value={values}>\n      {\" \"}\n      {props.children}{\" \"}\n    </UserContext.Provider>\n  );\n};\n","/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/dataContext/PlantConetx.js",["102","103","104"],{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":19,"column":10,"nodeType":"111","messageId":"112","endLine":19,"endColumn":21},{"ruleId":"109","severity":1,"message":"113","line":20,"column":8,"nodeType":"111","messageId":"112","endLine":20,"endColumn":16},{"ruleId":"109","severity":1,"message":"114","line":24,"column":50,"nodeType":"111","messageId":"112","endLine":24,"endColumn":59},{"ruleId":"115","severity":1,"message":"116","line":42,"column":6,"nodeType":"117","endLine":42,"endColumn":8,"suggestions":"118"},{"ruleId":"109","severity":1,"message":"119","line":2,"column":17,"nodeType":"111","messageId":"112","endLine":2,"endColumn":26},{"ruleId":"109","severity":1,"message":"113","line":8,"column":8,"nodeType":"111","messageId":"112","endLine":8,"endColumn":16},{"ruleId":"109","severity":1,"message":"120","line":1,"column":38,"nodeType":"111","messageId":"112","endLine":1,"endColumn":48},{"ruleId":"109","severity":1,"message":"121","line":11,"column":8,"nodeType":"111","messageId":"112","endLine":11,"endColumn":22},{"ruleId":"109","severity":1,"message":"122","line":12,"column":9,"nodeType":"111","messageId":"112","endLine":12,"endColumn":20},{"ruleId":"109","severity":1,"message":"123","line":2,"column":8,"nodeType":"111","messageId":"112","endLine":2,"endColumn":20},{"ruleId":"109","severity":1,"message":"124","line":62,"column":10,"nodeType":"111","messageId":"112","endLine":62,"endColumn":19},{"ruleId":"115","severity":1,"message":"125","line":67,"column":3,"nodeType":"117","endLine":67,"endColumn":5,"suggestions":"126"},{"ruleId":"109","severity":1,"message":"127","line":32,"column":15,"nodeType":"111","messageId":"112","endLine":32,"endColumn":19},{"ruleId":"109","severity":1,"message":"128","line":19,"column":10,"nodeType":"111","messageId":"112","endLine":19,"endColumn":17},{"ruleId":"109","severity":1,"message":"129","line":23,"column":17,"nodeType":"111","messageId":"112","endLine":23,"endColumn":25},{"ruleId":"109","severity":1,"message":"119","line":1,"column":20,"nodeType":"111","messageId":"112","endLine":1,"endColumn":29},{"ruleId":"109","severity":1,"message":"130","line":2,"column":8,"nodeType":"111","messageId":"112","endLine":2,"endColumn":19},{"ruleId":"131","severity":2,"message":"132","line":23,"column":5,"nodeType":"111","messageId":"133","endLine":23,"endColumn":15},"no-native-reassign",["134"],"no-negated-in-lhs",["135"],"no-unused-vars","'DataContext' is defined but never used.","Identifier","unusedVar","'ApiCalls' is defined but never used.","'setPlants' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'plants', 'setPlantMatch', 'setUserGlobalState', and 'userGloblaState'. Either include them or remove the dependency array.","ArrayExpression",["136"],"'useEffect' is defined but never used.","'useContext' is defined but never used.","'getPlantByName' is defined but never used.","'DataContext' is assigned a value but never used.","'registerUSer' is defined but never used.","'latinname' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'path'. Either include it or remove the dependency array.",["137"],"'data' is assigned a value but never used.","'loading' is assigned a value but never used.","'setToken' is assigned a value but never used.","'ApiServices' is defined but never used.","no-undef","'searchTerm' is not defined.","undef","no-global-assign","no-unsafe-negation",{"desc":"138","fix":"139"},{"desc":"140","fix":"141"},"Update the dependencies array to be: [plants, setPlantMatch, setUserGlobalState, userGloblaState]",{"range":"142","text":"143"},"Update the dependencies array to be: [path]",{"range":"144","text":"145"},[1562,1564],"[plants, setPlantMatch, setUserGlobalState, userGloblaState]",[1803,1805],"[path]"]