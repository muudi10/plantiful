[{"/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/index.js":"1","/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/dataContext/UserContext.js":"2","/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/dataContext/DataContext.js":"3","/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/App.js":"4","/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/dataContext/ApiServices.js":"5","/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/dataContext/plantbyname.js":"6","/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/dataContext/register.js":"7","/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/dataContext/userRegistration.js":"8","/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/dataContext/PlantConetx.js":"9","/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/components/ErrorPage.js":"10","/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/components/LoginForm.js":"11","/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/components/RegisterForm.js":"12","/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/components/PrivateRoutes.js":"13","/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/components/PlantPage.js":"14","/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/components/Footer.js":"15","/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/components/Dashboard.js":"16","/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/components/Navbar.js":"17","/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/components/Home.js":"18","/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/components/List.js":"19","/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/components/Alert.js":"20","/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/components/Pagination.js":"21"},{"size":534,"mtime":1639947959006,"results":"22","hashOfConfig":"23"},{"size":1941,"mtime":1640898236216,"results":"24","hashOfConfig":"23"},{"size":2089,"mtime":1640898236216,"results":"25","hashOfConfig":"23"},{"size":2590,"mtime":1640898236212,"results":"26","hashOfConfig":"23"},{"size":4822,"mtime":1640898236216,"results":"27","hashOfConfig":"23"},{"size":285,"mtime":1639770111682,"results":"28","hashOfConfig":"23"},{"size":674,"mtime":1640898236216,"results":"29","hashOfConfig":"23"},{"size":1057,"mtime":1639770111682,"results":"30","hashOfConfig":"23"},{"size":1023,"mtime":1640898236216,"results":"31","hashOfConfig":"23"},{"size":153,"mtime":1639947959006,"results":"32","hashOfConfig":"23"},{"size":2353,"mtime":1640898236216,"results":"33","hashOfConfig":"23"},{"size":3437,"mtime":1640898236216,"results":"34","hashOfConfig":"23"},{"size":460,"mtime":1640898236216,"results":"35","hashOfConfig":"23"},{"size":3121,"mtime":1640898236216,"results":"36","hashOfConfig":"23"},{"size":2146,"mtime":1640898236216,"results":"37","hashOfConfig":"23"},{"size":6599,"mtime":1640898236216,"results":"38","hashOfConfig":"23"},{"size":1863,"mtime":1640898236216,"results":"39","hashOfConfig":"23"},{"size":4951,"mtime":1640898236216,"results":"40","hashOfConfig":"23"},{"size":4617,"mtime":1640898236236,"results":"41","hashOfConfig":"23"},{"size":428,"mtime":1639997978401,"results":"42","hashOfConfig":"23"},{"size":805,"mtime":1640898236236,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1wxjva5",{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/index.js",[],"/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/dataContext/UserContext.js",["92","93"],"import { useState, useEffect, createContext } from \"react\";\nimport ApiServices from \"./ApiServices\";\nexport const UserContext = createContext();\n\nexport const UserContextProvider = (props) => {\n  const initialState = {\n    loginFields: {\n      email: \"\",\n      password: \"\",\n    },\n    alert: {\n      message: \"\",\n      isSuccess: false,\n    },\n  };\n  const [plants, setPlants] = useState()\n  const LocalToken = localStorage.getItem(\"token\");\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [user, setUser] = useState(\"\");\n  const [alert, setAlert] = useState(initialState.alert);\n  const [loginField, setLoginField] = useState(initialState.loginFields);\n  const [token, setToken] = useState(LocalToken);\n  const [userGlobalState, setUserGlobalState] = useState({\n    userDetails:null,\n    token:null,\n    userId: null,\n    userPlants:null\n\n  });\n\n    const handleLogin = (e) => {\n    e.preventDefault();\n\n    setLoading(true);\n    setAlert({ message: \"\", isSuccess: false });\n    ApiServices.userLogin(\n      loginField,\n      setUser,\n      setIsLoggedIn,\n      userGlobalState,\n      setUserGlobalState\n    );\n  };\n\n\n\n  const [PlantMatch, setPlantMatch] = useState([])\n  const handleLoginInputChange = (event) => {\n    event.preventDefault();\n\n    setLoginField((prev) => ({\n      ...prev,\n      // eslint-disable-next-line no-restricted-globals\n      [event.target.name]: event.target.value,\n    }));\n  };\n  useEffect(()=>{\n    ApiServices.getAllPlants(setPlants)\n},[])\n  const values = {\n    token,\n    isLoggedIn,\n    user,\n    loginField,\n    handleLogin,\n    handleLoginInputChange,\n    alert,\n    setIsLoggedIn,\n    setUser,\n\n    userGlobalState,\n\n    setUserGlobalState,\n    plants,\n    setPlants,\n    PlantMatch,\n    setPlantMatch\n  };\n\n  return (\n    <UserContext.Provider value={values}>\n      {\" \"}\n      {props.children}{\" \"}\n    </UserContext.Provider>\n  );\n};\n","/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/dataContext/DataContext.js",["94","95","96"],"import { useState, useEffect, createContext } from \"react\";\nimport registerUSer from '../dataContext/register'\nimport { useParams } from \"react-router-dom\";\nimport getPlantByName from './plantbyname'\nimport   ApiServices from './ApiServices';\nexport const DataContext = createContext();\n\nexport const DataContextProvider = (props) => {\n    // user registeration\n    const plantiful = \"plantiful\"\n    const [path, setPath] = useState()\n    const [message, setMessage] = useState(false);\n    const initialState = {\n      fields: {\n        name: \"\",\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\"\n      },\n      loginFields: {\n        email: \"\",\n        password: \"\",\n      },\n      alert: {\n        message: \"\",\n        isSuccess: false,\n      },\n\n    };\n      const [fields, setFields] = useState(initialState.fields);\n    const somevalue = `15`\n \n \n    const [plantByName, setPlantByName] = useState([]);\n    const [searchTerm, setSearchTerm] = useState()\n    \n    const handleFieldChange = (event) => {\n      event.preventDefault();\n      setFields((prev) => ({\n        ...prev,\n        [event.target.name]: event.target.value,\n      }));\n    };\n\n\n    const handleSubmit =(e)=>{\n        e.preventDefault()\n         ApiServices.userRegister(fields, setMessage)\n        }\n\n      const handleEnter = (event) => {\n        if (event.key === \"Enter\") {\n         \n        }\n      };\n      const handleInputChange = (event) => setSearchTerm(event.target.value);\n \n\n const { latinname } = useParams();\n\nuseEffect(()=>{\n\n  getPlantByName(setPlantByName, path)\n},[])\n\n\n      const value = {\n        fields,\n\n        setFields,\n\n        message,\n        setMessage,\n        handleFieldChange,\n        handleSubmit,\n        plantByName,\n        setPlantByName,\n        searchTerm,\n        setSearchTerm,\n        setPath,\n        handleEnter,\n        getPlantByName,\n        plantiful,\n        handleInputChange,\n        ApiServices,\nsomevalue,\n        alert\n       \n      };\n   \n\n  return (\n    <DataContext.Provider value={value}>{props.children}</DataContext.Provider>\n  );\n};\n","/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/App.js",["97","98","99","100","101","102"],"import RegisterForm from \"./components/RegisterForm\";\nimport LoginForm from \"./components/LoginForm\";\nimport PlantsList from \"./components/List\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport Navigationbar from \"./components/Navbar\";\nimport PlantPage from \"./components/PlantPage\";\nimport Dashboard from \"./components/Dashboard\";\nimport ErrorPage from \"./components/ErrorPage\";\nimport PrivateRoute from \"./components/PrivateRoutes\";\nimport Home from \"./components/Home\";\nimport Footer from \"./components/Footer\";\nimport \"bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Container } from \"react-bootstrap\";\nimport { DataContextProvider } from \"./dataContext/DataContext\";\nimport { UserRegContextProvider } from \"./dataContext/userRegistration\";\nimport { UserContextProvider } from \"./dataContext/UserContext\";\nimport { PlantContextProvider } from \"./dataContext/PlantConetx\";\nimport { UserContext } from \"./dataContext/UserContext\";\nimport { useContext } from \"react\";\n\nfunction App() {\n\tconst loggedInUSerId= JSON.parse(localStorage.getItem('userId'))\n\n\tconst Secret = process.env.REACT_APP_JWT_SECRET;\n\n\tconst {\n\t\tuserGlobalState,\n\t\tsetPlantMatch,\n\t\tplants,\n\t\tsetPlants,\n\t\tsetUserGlobalState,\n\t} = useContext(UserContext);\n\n\n\treturn (\n\t\t<DataContextProvider>\n\t\t\t<UserRegContextProvider>\n\t\t\t\t<UserContextProvider>\n\t\t\t\t\t<PlantContextProvider > \n\t\t\t\t\t<div className='App'>\n\t\t\t\t\t\t<Container fluid='true' className={\"no-gutters mx-0 px-0\"}>\n\t\t\t\t\t\t\t<Router>\n\t\t\t\t\t\t\t\t<Navigationbar fluid className={\"no-gutters mx-0 px-0\"} />\n\t\t\t\t\t\t\t\t<Routes>\n\t\t\t\t\t\t\t\t\t<Route path='/' element={<Home />}></Route>{\" \"}\n\t\t\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\t\t\tpath='/auth/register'\n\t\t\t\t\t\t\t\t\t\telement={<RegisterForm />}\n\t\t\t\t\t\t\t\t\t></Route>{\" \"}\n\t\t\t\t\t\t\t\t\t<Route path='/auth/login' element={<LoginForm />}></Route>{\" \"}\n\t\t\t\t\t\t\t\t\t<Route path='/plants' element={<PlantsList />}></Route>\n\t\t\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\t\t\tpath='/plants/:id'\n\t\t\t\t\t\t\t\t\t\telement={<PlantPage />}\n\t\t\t\t\t\t\t\t\t></Route>{\" \"}\n\n\t\t\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\t\t\tpath={`/users/${loggedInUSerId}`}\n\t\t\t\t\t\t\t\t\t\telement={\n\t\t\t\t\t\t\t\t\t\t<PrivateRoute>\n\t\t\t\t\t\t\t\t\t\t\t\t<Dashboard />\n\t\t\t\t\t\t\t\t\t</PrivateRoute>\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Route path='*' element={<ErrorPage />}></Route>\n\t\t\t\t\t\t\t\t</Routes>{\" \"}\n\t\t\t\t\t\t\t</Router>{\" \"}\n\t\t\t\t\t\t\t<div className='page_container'>\n\t\t\t\t\t\t\t\t<div classname='content_wrap'>\n\t\t\t\t\t\t\t\t\t<Footer />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Container>{\" \"}\n\t\t\t\t\t</div>{\" \"}\n\t\t\t\t\t</PlantContextProvider>\n\t\t\t\t</UserContextProvider>\n\t\t\t</UserRegContextProvider>\n\t\t</DataContextProvider>\n\t);\n}\n\nexport default App;\n","/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/dataContext/ApiServices.js",["103","104","105","106"],"import axios from \"axios\";\n\nconst baseURL = `https://api.eastberry.io`\n\nconst ApiCalls = {\n\n    getAllPlants: async (setPlants) => {\n        // const baseURL = `/`\n\n        let endpoint = '/plants';\n        const response = await axios.get(endpoint)\n        const data = await response.data\n        setPlants(data)\n\n\n    },\n    getPlantById: async (plantId, setSinglePlant) => {\n        let endpoint = `/plants/${plantId}`\n        const response = await axios.get(endpoint)\n        const data = await response.data\n        setSinglePlant(data)\n\n    },\n    searchPlant: async (searchTerm) => {\n\n        let endpoint = '/plant';\n        if (searchTerm) {\n            endpoint = searchTerm + {\n                searchTerm\n            }\n        }\n        const response = await axios.get(endpoint)\n        const data = await response.data\n\n    },\n\n    addPlant: async (loggedInUSerId, plantId) => {\n\n        try {\n            const response = await axios.post(`/users/user/addplant`, {\n                userid: loggedInUSerId,\n                plantid: plantId\n\n            })\n            console.log(response)\n\n        } catch (error) {\n            console.log(error)\n\n        }\n\n    },\n    userRegister: async (fields, setMessage) => {\n        try {\n            const response = await axios.post(`/auth/register`, {\n                name: fields.name,\n                email: fields.email,\n                password: fields.password,\n\n            })\n            response.data && window.location.replace(\"/auth/login\");\n\n\n\n            //    const data = await response\n            console.log(response.data)\n            await setMessage(`Form has been submited sucessfully`)\n        } catch (error) {\n\n\n            setMessage(`Failed to submit form`)\n        }\n\n\n    },\n    userLogin: async (loginField, setUser, setIsLoggedIn, userGlobalState,\n        setUserGlobalState) => {\n        try {\n            let endpoint = `/auth/login`\n            const response = await axios.post(endpoint, {\n                email: loginField.email,\n                password: loginField.password\n            })\n            console.log(response.data.others)\n            response && localStorage.setItem(\"token\", JSON.stringify(response.data.token))\n            response && localStorage.setItem(\"plants\", JSON.stringify(response.data.others.userPlants))\n            response && localStorage.setItem(\"userId\", JSON.stringify(response.data.others._id))\n            response && localStorage.setItem(\"id\", (response.data.others._id))\n            response && localStorage.setItem(\"userEmail\", JSON.stringify(response.data.others.email))\n\n            console.log(response.data.others.email)\n            response && setIsLoggedIn(true)\n            await setUserGlobalState({\n                ...userGlobalState,\n                userDetails: response.data.others,\n                token: response.data.token,\n                userId: response.data.others,\n                userPlants: response.data.userPlants,\n\n            })\n\n            response && setUser(response.data.userPlants)\n            const loggedInUSerId = localStorage.getItem(\"id\")\n\n            response && window.location.replace(`/users/${loggedInUSerId}`)\n            console.log(JSON.stringify(response.data.others._id))\n        } catch (error) {\n            console.log(error)\n\n        }\n    },\n\n    CreateNotification: async (notificationInfo, user) => {\n\n\n        try {\n            const response = await axios.post('/notification', {\n                userId: user,\n                plantId: notificationInfo.plantId,\n                frequency: notificationInfo.frequency,\n                plantName: notificationInfo.plantName,\n                userEmail: \"jeilani@gmail.com\"\n            })\n\n         \n\n        } catch (error) {\n            console.log(error)\n\n        }\n\n    },\n    PauseNotification: async (user, plantId) => {\n        try {\n            const response = await axios.put('/notification/status/update', {\n                userId: user,\n                plantId: plantId,\n\n\n            })\n\n        } catch (error) {\n            console.log(error)\n\n        }\n\n    },\n    removePlant: async (user, plantId) => {\n        try {\n            const response = await axios.put('/plants/delete/', {\n                userId: user,\n                plantId: plantId,\n\n\n            })\n            response && window.location.reload(true)\n            console.log(response)\n\n        } catch (error) {\n            console.log(error)\n\n        }\n\n    },\n    watered: async (user, plantId) => {\n        try {\n            const response = await axios.put('/notification/watered/', {\n                userId: user,\n                plantId: plantId,\n            })\n            console.log(response)\n\n        } catch (error) {\n            console.log(error)\n\n        }\n\n    }\n\n\n\n}\n\nexport default ApiCalls","/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/dataContext/plantbyname.js",[],"/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/dataContext/register.js",[],"/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/dataContext/userRegistration.js",[],"/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/dataContext/PlantConetx.js",[],"/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/components/ErrorPage.js",[],"/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/components/LoginForm.js",[],"/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/components/RegisterForm.js",[],"/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/components/PrivateRoutes.js",[],"/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/components/PlantPage.js",[],"/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/components/Footer.js",[],"/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/components/Dashboard.js",["107","108","109","110","111"],"import React, { useContext, useEffect, useState } from \"react\";\nimport {\n  Container,\n  Button,\n  Form,\n  Card,\n  ListGroup,\n  ListGroupItem,\n  Row,\n  Col,\n} from \"react-bootstrap\";\nimport Emoji from \"a11y-react-emoji\";\nimport dummyPlant from \"../assets/dummyPlant.png\";\nimport { XCircle, CheckCircle, PauseCircle } from \"phosphor-react\";\nimport { UserContext } from \"../dataContext/UserContext\";\nimport \"../styles/Dashboard.css\";\nimport { Link } from \"react-router-dom\";\nimport Alert from \"./Alert\";\nimport ApiCalls from '../dataContext/ApiServices';\nimport axios from 'axios'\n\n\nconst Dashboard = () => {\n  const initialState = {\n    alert: {\n      message: \"\",\n      isSuccess: false,\n    }\n  }\n  const [alert, setAlert] = useState(initialState.alert)\n  const {\n    userGlobalState,\n    setPlantMatch,\n    plants,\n    setPlants,\n    setUserGlobalState,\n  } = useContext(UserContext);\n  const [notificationInfo, setNotificationInfo] = useState({\n    plantName: null,\n    plantId: null,\n    frequency: null,\n  });\n  const [frequency, setFrequency] = useState();\n  const handleFrequency = (e) => {\n    setFrequency(e.target.value);\n  };\n\n\n  const user = JSON.parse(localStorage.getItem(\"userId\"))\n  const email = JSON.parse(localStorage.getItem(\"userEmail\"))\n\n\n  const [userPlants, setUserPlants] = useState([])\n  const userId = window.location.pathname.split(\"/\")[2]\n  useEffect(() => {\n    const getUserPlants = async () => {\n      const res = await axios.get(\"/users/\" + userId);\n      setUserPlants(res.data.userPlants)\n\n    };\n    getUserPlants();\n  }, [userId]);\n\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    ApiCalls.CreateNotification(notificationInfo, user, email)\n    setAlert({\n      message: \"Notification created. Keep an eye on your inbox!📩\",\n     isSuccess: true\n    })\n  };\n\n  return (\n    <div className=\"dashboard_wrapper\">\n      <Container fluid>\n        <div className=\"title_border\">\n          <h2 className=\"dashboard_title\">\n            {\" \"}\n            Your Plant Dashboard <Emoji symbol=\"🪴\" label=\"plant-pot\" />{\" \"}\n          </h2>{\" \"}\n        </div>\n\n        <p className=\"dashboard_text\">\n          {\" \"}\n          Welcome to your <span className=\"brandname\"> Plantiful </span>{\" \"}\n          dashboard. Here you can set and amend notifications for your plants.\n        </p>\n        <Alert message={alert.message} success={alert.isSuccess} />\n        <div className=\"dashboard_section\">\n          <form onSubmit={handleSubmit}>\n            <Row xs={2} md={4} className=\"g-4\" >\n            \n              <Col style={{display: \"flex\", flexDirection: \"row\"}}>\n                {\" \"}\n                {userPlants !== null ? userPlants.map((plant) => (\n                  <Card\n                    key={plant._id}\n                    Card\n                    style={{\n                      width: \"80rem\",\n                      border: \"1px solid #013606\",\n                      flex: 1,\n                      padding: \"10px\",\n                      margin: \"10px\"\n                    }}\n                  >\n                    <Card.Img variant=\"top\" src={dummyPlant} />{\" \"}\n                    <Card.Body>\n                      <Card.Title className=\"plantcard_title\">\n                        {\" \"}\n                        {plant.familyName}{\" \"}\n                      </Card.Title>\n                      <Card.Text className=\"plantcard_text\">\n                        I like to be watered{\" \"}\n                        <span className=\"plantcard_watering\">\n                          {\" \"}\n                          {plant.watering}{\" \"}\n                        </span>{\" \"}\n                      </Card.Text>{\" \"}\n                    </Card.Body>{\" \"}\n                    <ListGroup className=\"list-group-flush\">\n                      <ListGroupItem className=\"plantcard_notification\">\n                        {\" \"}\n                        Schedule notification:{\" \"}\n                      </ListGroupItem>{\" \"}\n                      <Form.Select\n                        value={frequency}\n                        onChange={handleFrequency}\n                        size=\"sm\"\n                      >\n                        <option> Select Frequency </option>{\" \"}\n                        <option> Weekly </option>{\" \"}\n                        <option> Twice Weekly </option>{\" \"}\n                        <option> Thrice Weekly </option>\n                        <option> Monthly </option>{\" \"}\n                      </Form.Select>{\" \"}\n                      <Button\n                        className=\"plantcard_button\"\n                        variant=\"success\"\n                        onClick={() =>\n                          setNotificationInfo({\n                            plantName: plant.familyName,\n                            plantId: plant._id,\n                            frequency: frequency,\n                          \n                          })\n                        }\n                        type=\"submit\"\n                      >\n                        {\" \"}\n                        Create notification{\" \"}\n                      </Button>{\" \"}\n                    </ListGroup>{\" \"}\n                    <Card.Body>\n                      <Link to={`${plant._id}`}>\n                        {\" \"}\n                  \n                      </Link>\n                      <Button onClick={() => {\n                          ApiCalls.PauseNotification(user, plant._id);  setAlert({\n                            message: \"Settings updated. You will stop receiving notifications for this plant.\",\n                           isSuccess: true\n                          })\n                        }} className=\"remove_btn\"><PauseCircle size={18} /> Mute Notification </Button>{\" \"}\n\n                      <Button href=\"#\" onClick={()=>{\n                        ApiCalls.removePlant(user, plant._id)\n                      }} className=\"remove_btn\"><XCircle size={18} /> Remove Plant </Button>{\" \"}\n                      <Button href=\"#\" onClick={()=>{\n                        ApiCalls.watered(user, plant._id); setAlert({\n                          message: \"Thanks for watering your plant! 🌱\",\n                         isSuccess: true\n                        })\n                      }} className=\"remove_btn\"> <CheckCircle size={18} /> Plant Watered </Button>{\" \"}\n           \n                    </Card.Body>\n                  </Card>\n                  )) : \"No Plants.\"}\n             \n              </Col>\n            </Row>\n           \n          </form>\n     \n        </div>\n      </Container>\n    </div>\n  );\n};\n\nexport default Dashboard;\n","/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/components/Navbar.js",[],"/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/components/Home.js",[],"/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/components/List.js",["112"],"import { Plus, Heart, ArrowRight } from \"phosphor-react\";\nimport React, { useEffect, useContext, useState } from \"react\";\nimport { Button, Container } from \"react-bootstrap\";\nimport \"../styles/list.css\";\nimport { UserContext } from \"../dataContext/UserContext\";\nimport { Link } from \"react-router-dom\";\nimport Pagination from \"./Pagination\";\nimport {PlantContext} from '../dataContext/PlantConetx'\nimport axios from 'axios'\nfunction List() {\n  const { plants, PlantMatch, setPlantMatch } =\n    useContext(UserContext);\n  const [search, setSearch] = useState(\"\");\n  const handleLoginInputChange = (event) => {\n    event.preventDefault();\n    setSearch(event.target.value);\n    plantSearch(search);\n  };\n  const {setSinglePlant} = useContext(PlantContext)\n  const plantId = window.location.pathname.split(\"/\")[2] \n\nconst getSinglePlant = async () => {\n      const res = await axios.get(\"/plants/\" + plantId);\n      setSinglePlant(res.data);\n\n    };\n\n\n  useEffect(() => {\n    \n    getSinglePlant();\n  }, [plantId]);\n\n  const plantSearch = (search) => {\n    let matchedPlant = plants.filter((plant) => {\n      const regex = new RegExp(`${search}`, \"gi\");\n      return plant.latinName.match(regex) || plant.familyName.match(regex);\n    });\n    setPlantMatch(matchedPlant)\n   \n  };\n\n\n\nconst rendering =  (PlantMatch.length > 0 )? PlantMatch:plants\n\n  return (\n    <>\n      <Container\n        fluid\n        style={{\n          backgroundColor: \"#F9F5F1\",\n        }}\n      >\n        <section className=\"panel\">\n          <header className=\"panel-heading\"> </header>{\" \"}\n          <div className=\"panel-body\">\n            <div className=\"row p-3\">\n              <div className=\"col-12\">\n                <div className=\"input-group \">\n                  <input\n                    type=\"text\"\n                    placeholder=\"Search for a plant..\"\n                    className=\"w-50 search_input\"\n                    value={search}\n                    onChange={handleLoginInputChange}\n                  />\n                  <Button\n                    type=\"submit\"\n                    id=\"submit\"\n                    style={{\n                      backgroundColor: \"#55A356\",\n                      border: \"#013606\",\n                      margin: \"8px\",\n                      overflow: \"hidden\",\n                    }}\n                  >\n                    Go! <ArrowRight size={20} />{\" \"}\n                  </Button>{\" \"}\n                </div>{\" \"}\n              </div>{\" \"}\n            </div>{\" \"}\n          </div>{\" \"}\n          <table className=\"table table-hover p-table\">\n            <thead className=\"p_titles\">\n              <tr>\n                <th> Plant Name </th> <th> Image </th> <th> Origin </th>{\" \"}\n                <th> Watering needs </th> <th> Temperature </th> <th> Like </th>{\" \"}\n                <th> Add </th>{\" \"}\n              </tr>{\" \"}\n            </thead>{\" \"}\n            <tbody>\n              {rendering &&\n                rendering.map((plant, index) => (\n                  <>\n                    <div className=\"user\"> </div>{\" \"}\n                    <tr>\n                      <td className=\"p-name\" onClick={getSinglePlant}>\n                        <Link to={`${plant._id}`}>\n                          {\" \"}\n                          {plant.familyName}{\" \"}\n                        </Link>\n\n                        <br />\n                      </td>{\" \"}\n                      <td className=\"p-name\">\n                        <a href=\"plant\"> {plant.familyName} </a> <br />\n                      </td>{\" \"}\n                      <td className=\"p-name\">\n                        <small> {plant.origin} </small>{\" \"}\n                      </td>\n                      <td className=\"p-name\">\n                        <small> {plant.watering} </small>{\" \"}\n                      </td>{\" \"}\n                      <td>\n                        <span className=\"label label-danger\">\n                          {\" \"}\n                          {plant.temperature} &deg; <sup> c </sup>{\" \"}\n                        </span>{\" \"}\n                      </td>{\" \"}\n                      <td>\n                        <form > \n                        <Heart size={30} weight=\"bold\" className=\"m-4\" />\n                        </form>\n                      </td>{\" \"}\n                      <td>\n                        <Plus size={20} weight=\"bold\" />\n                      </td>{\" \"}\n                    </tr>\n                  </>\n                ))}{\" \"}\n            </tbody>{\" \"}\n          </table>{\" \"}\n        </section>{\" \"}\n      </Container>\n\n      <Pagination />\n    </>\n  );\n}\n\nexport default List;\n","/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/components/Alert.js",[],"/home/muudi/Documents/DEVELOPMENT/Manchester Codes/FinalProject/plantiful/src/components/Pagination.js",[],{"ruleId":"113","severity":1,"message":"114","line":19,"column":10,"nodeType":"115","messageId":"116","endLine":19,"endColumn":17},{"ruleId":"113","severity":1,"message":"117","line":23,"column":17,"nodeType":"115","messageId":"116","endLine":23,"endColumn":25},{"ruleId":"113","severity":1,"message":"118","line":2,"column":8,"nodeType":"115","messageId":"116","endLine":2,"endColumn":20},{"ruleId":"113","severity":1,"message":"119","line":59,"column":10,"nodeType":"115","messageId":"116","endLine":59,"endColumn":19},{"ruleId":"120","severity":1,"message":"121","line":64,"column":3,"nodeType":"122","endLine":64,"endColumn":5,"suggestions":"123"},{"ruleId":"113","severity":1,"message":"124","line":25,"column":8,"nodeType":"115","messageId":"116","endLine":25,"endColumn":14},{"ruleId":"113","severity":1,"message":"125","line":28,"column":3,"nodeType":"115","messageId":"116","endLine":28,"endColumn":18},{"ruleId":"113","severity":1,"message":"126","line":29,"column":3,"nodeType":"115","messageId":"116","endLine":29,"endColumn":16},{"ruleId":"113","severity":1,"message":"127","line":30,"column":3,"nodeType":"115","messageId":"116","endLine":30,"endColumn":9},{"ruleId":"113","severity":1,"message":"128","line":31,"column":3,"nodeType":"115","messageId":"116","endLine":31,"endColumn":12},{"ruleId":"113","severity":1,"message":"129","line":32,"column":3,"nodeType":"115","messageId":"116","endLine":32,"endColumn":21},{"ruleId":"113","severity":1,"message":"130","line":3,"column":7,"nodeType":"115","messageId":"116","endLine":3,"endColumn":14},{"ruleId":"113","severity":1,"message":"131","line":33,"column":15,"nodeType":"115","messageId":"116","endLine":33,"endColumn":19},{"ruleId":"113","severity":1,"message":"132","line":117,"column":19,"nodeType":"115","messageId":"116","endLine":117,"endColumn":27},{"ruleId":"113","severity":1,"message":"132","line":135,"column":19,"nodeType":"115","messageId":"116","endLine":135,"endColumn":27},{"ruleId":"113","severity":1,"message":"125","line":32,"column":5,"nodeType":"115","messageId":"116","endLine":32,"endColumn":20},{"ruleId":"113","severity":1,"message":"126","line":33,"column":5,"nodeType":"115","messageId":"116","endLine":33,"endColumn":18},{"ruleId":"113","severity":1,"message":"127","line":34,"column":5,"nodeType":"115","messageId":"116","endLine":34,"endColumn":11},{"ruleId":"113","severity":1,"message":"128","line":35,"column":5,"nodeType":"115","messageId":"116","endLine":35,"endColumn":14},{"ruleId":"113","severity":1,"message":"129","line":36,"column":5,"nodeType":"115","messageId":"116","endLine":36,"endColumn":23},{"ruleId":"120","severity":1,"message":"133","line":32,"column":6,"nodeType":"122","endLine":32,"endColumn":15,"suggestions":"134"},"no-unused-vars","'loading' is assigned a value but never used.","Identifier","unusedVar","'setToken' is assigned a value but never used.","'registerUSer' is defined but never used.","'latinname' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'path'. Either include it or remove the dependency array.","ArrayExpression",["135"],"'Secret' is assigned a value but never used.","'userGlobalState' is assigned a value but never used.","'setPlantMatch' is assigned a value but never used.","'plants' is assigned a value but never used.","'setPlants' is assigned a value but never used.","'setUserGlobalState' is assigned a value but never used.","'baseURL' is assigned a value but never used.","'data' is assigned a value but never used.","'response' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getSinglePlant'. Either include it or remove the dependency array.",["136"],{"desc":"137","fix":"138"},{"desc":"139","fix":"140"},"Update the dependencies array to be: [path]",{"range":"141","text":"142"},"Update the dependencies array to be: [getSinglePlant, plantId]",{"range":"143","text":"144"},[1575,1577],"[path]",[1001,1010],"[getSinglePlant, plantId]"]